# -*- coding: utf-8 -*-import pytestimport requestsimport allurefrom utils.log_utils import LogUtilslogger1=LogUtils().get_log()#@allure.feature("功能名称")#@allure.feature('手机号模块feature')def test_get_params():    allure.dynamic.story("story--动态")    allure.dynamic.description("描述")    allure.dynamic.title("title--动态")    print("打印测试get请求数据")    logger1.info("11111打印测试get请求数据")    url = "http://api.binstd.com/shouji/query"    params = {"shouji": "13399999999", "appkey": "0c818521d38759e1"}    response = requests.get(url, params=params)    print(response.json())    print(response.status_code)    result = response.json()    assert response.status_code == 200    logger1.error(f"状态码不匹配: {response.status_code}")    assert result["status"] == 0, "状态码不为0"    assert result["msg"] == "ok", "消息不为'ok'"    assert result["result"]["shouji"] == "13399999999", "手机号码不匹配"    assert result["result"]["cardtype"] is None, "卡类型不为空"def test_get_params1():    print("打印测试get请求数据")    logger1.info("11111打印测试get请求数据")    url = "http://api.binstd.com/shouji/query"    params = {"shouji": "13399999999", "appkey": "0c818521d38759e1"}    response = requests.get(url, params=params)    print(response.json())    print(response.status_code)    result = response.json()    assert response.status_code == 2100    logger1.error(f"状态码不匹配: {response.status_code}")    assert result["status"] == 0, "状态码不为0"    assert result["msg"] == "ok", "消息不为'ok'"    assert result["result"]["shouji"] == "13399999999", "手机号码不匹配"    assert result["result"]["cardtype"] is None, "卡类型不为空"if __name__ == '__main__':    pytest.main()